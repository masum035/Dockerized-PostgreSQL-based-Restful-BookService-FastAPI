{
	"info": {
		"_postman_id": "839e744c-fcdc-4a9d-b7b4-5288c2e7549c",
		"name": "BookServiceApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20023247"
	},
	"item": [
		{
			"name": "API Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response_Body = pm.response.json();\r",
							"\r",
							"pm.test(\"Status Code Check\",()=>{\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Author_id present or not\",()=>{\r",
							"    pm.expect(response_Body.id).to.be.a(\"string\");\r",
							"    pm.collectionVariables.set(\"author_id\", response_Body.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"full_name\":\"{{$randomFullName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Author By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code Check\",()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/authors/:author_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors",
						":author_id"
					],
					"variable": [
						{
							"key": "author_id",
							"value": "{{author_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authors List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code Check\",()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/authors?name_starts_with=&skip=0&limit=25",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors"
					],
					"query": [
						{
							"key": "name_starts_with",
							"value": ""
						},
						{
							"key": "skip",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "25"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add New Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response_Body = pm.response.json();\r",
							"\r",
							"pm.test(\"Status Code Check\",()=>{\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Book_id present or not\",()=>{\r",
							"    pm.expect(response_Body.id).to.be.a(\"string\");\r",
							"    pm.collectionVariables.set(\"book_id\", response_Body.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{$randomCatchPhrase}}\",\r\n  \"author_id\": \"{{author_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read that Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status Code Check\",()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{$randomCatchPhrase}}\",\r\n  \"author_id\": \"{{author_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/books/:book_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						":book_id"
					],
					"variable": [
						{
							"key": "book_id",
							"value": "{{book_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status Code Check\",()=>{\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{$randomCatchPhrase}}\",\r\n  \"author_id\": \"{{author_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/books?skip=0&limit=10&title_startswith=",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "skip",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "10"
						},
						{
							"key": "title_startswith",
							"value": ""
						},
						{
							"key": "author_id",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response_Body = pm.response.json();\r",
							"\r",
							"pm.test(\"Status Code Check\",()=>{\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Client_id present or not\",()=>{\r",
							"    pm.expect(response_Body.id).to.be.a(\"string\");\r",
							"    pm.expect(response_Body.access_token).to.be.a(\"string\");\r",
							"    pm.collectionVariables.set(\"client_id\", response_Body.id);\r",
							"    pm.collectionVariables.set(\"accessToken\", response_Body.access_token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"full_name\": \"{{$randomFullName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clients",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrow A Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status Code Check\",()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response_Body = pm.response.json();\r",
							"\r",
							"pm.test(\"Book is Borrowed\",()=>{\r",
							"    pm.expect(response_body).to.have.haveOwnProperty('is_borrowed');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{$randomCatchPhrase}}\",\r\n  \"author_id\": \"{{author_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clients/:client_id/link_book/:book_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clients",
						":client_id",
						"link_book",
						":book_id"
					],
					"variable": [
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "book_id",
							"value": "{{book_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Return The Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status Code Check\",()=>{\r",
							"pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clients/:client_id/unlink_book/:book_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clients",
						":client_id",
						"unlink_book",
						":book_id"
					],
					"variable": [
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "book_id",
							"value": "{{book_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "All Borrowed By Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code Check\",()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clients/books_borrowed_by_client",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clients",
						"books_borrowed_by_client"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "author_id",
			"value": ""
		},
		{
			"key": "book_id",
			"value": ""
		},
		{
			"key": "client_id",
			"value": ""
		}
	]
}